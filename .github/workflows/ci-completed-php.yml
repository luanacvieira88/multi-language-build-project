name: Build PHP COMPLETED Workflow
on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up environment and install dependencies
        run: |
          echo "Setting up environment for language: ${{ inputs.language }}"
          echo "Setting up PHP... path initial"
          # Mostre o diretório atual
          pwd
          ls -l
          cd php || exit 1  # Certifique-se de que o diretório existe
          echo "Setting up PHP... path after cd php"
          pwd
          ls -l
          sudo add-apt-repository ppa:ondrej/php -y
          sudo apt-get update
          sudo apt-get install php8.2 php8.2-cli php8.2-mbstring php8.2-dom -y
          composer install
     
      - name: Run SonarQube scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.exclusions=**/*.java

      - name: Run unit tests
        run: |
          echo "Setting RUN TESTS"
          # Mostre o diretório atual
          pwd
          ls -l
          cd php || exit 1  # Certifique-se de que o diretório existe
          echo "Setting path after cd php"
          pwd
          ls -l
          vendor/bin/phpunit     
      
      - name: Build PHP project
        run: |
          echo "Building PHP project..."
          cd php || exit 1
          pwd
          ls -la
          # Criar o diretório de saída
          echo "Criar Diretório"
          mkdir -p dist
          
          # Copiar arquivos necessários para o diretório dist
          # Você pode ajustar os arquivos que deseja copiar
          cp -R src/* dist/  # Copia todos os arquivos do diretório src para dist
          
          # Se você quiser incluir o arquivo composer.json e outros arquivos de configuração
          cp composer.json dist/
          cp phpunit.xml dist/
          echo "Build completed. Artifacts are located in the 'dist' directory."
          ls -la dist/
       
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: php-build-artifacts
          path: ./php/dist/*
          
